apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
data:
  default.conf: |
    server {
       listen       80;
       listen  [::]:80;
       # server_name  localhost;
       location / {
           root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        location /tomcat {
            proxy_pass http://tomcat-web-service/;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nginx
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path:  "/nfs-data/nginx-web"
    server: 10.0.0.17
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nginx
  namespace: default
spec:
  accessModes: ["ReadOnlyMany"]
  volumeMode: Filesystem
  resources:
    requests:
      storage: 3Gi
    limits:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
      - name: webdatapath
        persistentVolumeClaim:
          claimName: pvc-nginx
      - name: nginxdataconf
        configMap:
          name: nginx-configmap
          optional: false
      containers:
      - name: nginx
        image: 10.0.0.19:80/mykubernetes/nginx-proxy:1.21.3
        ports:
        - containerPort: 80
        volumeMounts:
        - name: webdatapath
          mountPath: "/usr/share/nginx/html"
        - name: nginxdataconf
          mountPath: "/etc/nginx/conf.d/"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-web-service
  labels:
    app: nginx-web-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
      nodePort: 30086

